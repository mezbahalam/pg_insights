<div class="compare-compact">
  <!-- Compact Header -->
  <div class="compact-header">
    <div class="header-content">
      <div class="header-main">
        <h1>🔍 Compare Snapshots</h1>
        <p>Analyze PostgreSQL configuration and performance changes between periods</p>
      </div>
      <div class="header-actions">
        <a href="<%= timeline_path %>" class="btn-ghost">← Timeline</a>
        <button onclick="exportComparison()" class="btn-primary">📥 Export</button>
      </div>
    </div>
  </div>

  <!-- Compact Overview -->
  <% if @comparison_data && @comparison_data.any? %>
    <div class="overview-cards">
      <div class="card overview">
        <div class="card-icon">📊</div>
        <div class="card-content">
          <div class="card-value">
            <%= distance_of_time_in_words(@date1.to_date, @date2.to_date) %>
          </div>
          <div class="card-label">Comparison Period</div>
          <div class="card-detail">
            <%= @date1.strftime('%m/%d/%Y') %> → <%= @date2.strftime('%m/%d/%Y') %>
          </div>
        </div>
      </div>

      <div class="card status">
        <div class="card-icon">⚡</div>
        <div class="card-content">
          <div class="card-value">
            <% 
              cache_data = @performance_comparison&.dig(:metrics, 'cache_hit_rate') || @performance_comparison&.dig(:metrics, :cache_hit_rate)
              cache_diff = cache_data ? (cache_data[:difference] || cache_data[:change] || 0).to_f : 0
            %>
            <% if cache_diff != 0 %>
              <%= cache_diff > 0 ? "+#{cache_diff.round(1)}%" : "#{cache_diff.round(1)}%" %>
            <% else %>
              --
            <% end %>
          </div>
          <div class="card-label">Cache Hit Change</div>
          <div class="card-detail <%= cache_diff >= 0 ? 'positive' : 'negative' %>">
            <% if cache_diff == 0 %>
              📊 No Change
            <% elsif cache_diff >= 0 %>
              📈 Improved
            <% else %>
              📉 Declined
            <% end %>
          </div>
        </div>
      </div>

      <div class="card config">
        <div class="card-icon">⚙️</div>
        <div class="card-content">
          <div class="card-value">
            <%= (@configuration_comparison || {}).count %>
          </div>
          <div class="card-label">Config Changes</div>
          <div class="card-detail">
            <% changes_count = (@configuration_comparison || {}).count %>
            <% if changes_count == 0 %>
              ✅ Stable
            <% elsif changes_count == 1 %>
              ⚠️ 1 Modified
            <% else %>
              ⚠️ <%= changes_count %> Modified
            <% end %>
          </div>
        </div>
      </div>

      <div class="card metrics">
        <div class="card-icon">📈</div>
        <div class="card-content">
          <div class="card-value">
            <% 
              query_data = @performance_comparison&.dig(:metrics, 'avg_query_time') || @performance_comparison&.dig(:metrics, :avg_query_time)
              query_diff = query_data ? (query_data[:difference] || query_data[:change] || 0).to_f : 0
            %>
            <% if query_diff != 0 %>
              <%= query_diff > 0 ? "+#{query_diff.round(1)}ms" : "#{query_diff.round(1)}ms" %>
            <% else %>
              --
            <% end %>
          </div>
          <div class="card-label">Query Time Change</div>
          <div class="card-detail <%= query_diff <= 0 ? 'positive' : 'negative' %>">
            <% if query_diff == 0 %>
              📊 No Change
            <% elsif query_diff <= 0 %>
              📈 Faster
            <% else %>
              📉 Slower
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <!-- Compact Tabs -->
    <div class="tab-container">
      <div class="tab-header">
        <button class="tab-btn active" onclick="showTab('performance')">📊 Performance</button>
        <button class="tab-btn" onclick="showTab('config')">⚙️ Configuration</button>
        <button class="tab-btn" onclick="showTab('infrastructure')">🏗️ Infrastructure</button>
      </div>

      <!-- Performance Tab -->
      <div id="performance-tab" class="tab-content active">
        <div class="content-grid">
          <!-- Key Metrics -->
          <div class="panel metrics-panel">
            <div class="panel-header">
              <h3>📊 Key Metrics</h3>
            </div>
            <div class="metrics-table">
              <% if @performance_comparison && @performance_comparison[:metrics] %>
                <% @performance_comparison[:metrics].each do |metric, data| %>
                  <div class="metric-row">
                    <div class="metric-name">
                      <%= metric.humanize %>
                    </div>
                    <div class="metric-values">
                      <span class="from-value"><%= (data[:before] || 0).to_f.round(2) %></span>
                      <span class="arrow">→</span>
                      <span class="to-value"><%= (data[:after] || 0).to_f.round(2) %></span>
                    </div>
                    <div class="metric-change <%= (data[:difference] || 0).to_f >= 0 ? 'positive' : 'negative' %>">
                      <%= (data[:difference] || 0).to_f >= 0 ? '+' : '' %><%= (data[:difference] || 0).to_f.round(2) %>
                      <% if metric.include?('rate') || metric.include?('percent') %>%<% end %>
                    </div>
                  </div>
                <% end %>
              <% else %>
                <div class="empty-metrics">
                  <p>No performance metrics available</p>
                </div>
              <% end %>
            </div>
          </div>

          <!-- Database Stats -->
          <div class="panel stats-panel">
            <div class="panel-header">
              <h3>💾 Database Stats</h3>
            </div>
            <div class="stats-grid">
              <div class="stat-item">
                <span class="stat-label">Database Size</span>
                <span class="stat-value">
                  <%= (@metadata_comparison&.dig(:database_size, :before) || 'N/A') %> → 
                  <%= (@metadata_comparison&.dig(:database_size, :after) || 'N/A') %>
                </span>
              </div>
              <div class="stat-item">
                <span class="stat-label">Table Count</span>
                <span class="stat-value">
                  <%= (@metadata_comparison&.dig(:table_count, :before) || 0) %> → 
                  <%= (@metadata_comparison&.dig(:table_count, :after) || 0) %>
                </span>
              </div>
              <div class="stat-item">
                <span class="stat-label">Index Count</span>
                <span class="stat-value">
                  <%= (@metadata_comparison&.dig(:index_count, :before) || 0) %> → 
                  <%= (@metadata_comparison&.dig(:index_count, :after) || 0) %>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Configuration Tab -->
      <div id="config-tab" class="tab-content">
        <div class="config-panel">
          <div class="panel-header">
            <h3>⚙️ PostgreSQL Configuration</h3>
            <span class="changes-count">
              <%= (@configuration_comparison || {}).count %> parameters compared
            </span>
          </div>
          
          <% if @configuration_comparison && @configuration_comparison.any? %>
            <div class="config-table">
              <% @configuration_comparison.each do |param, changes| %>
                <div class="config-row <%= changes[:from] != changes[:to] ? 'changed' : 'unchanged' %>">
                  <div class="config-param">
                    <code><%= param %></code>
                    <% if changes[:from] != changes[:to] %>
                      <span class="change-badge">Modified</span>
                    <% end %>
                  </div>
                  <div class="config-values">
                    <div class="config-before">
                      <span class="label">Before:</span>
                      <span class="value"><%= changes[:from] %></span>
                    </div>
                    <div class="config-after">
                      <span class="label">After:</span>
                      <span class="value"><%= changes[:to] %></span>
                    </div>
                  </div>
                  <% if changes[:from] != changes[:to] %>
                    <div class="impact-indicator">
                      ⚠️ Changed
                    </div>
                  <% else %>
                    <div class="impact-indicator stable">
                      ✅ Stable
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <div class="empty-config">
              <p>No configuration data available for comparison</p>
            </div>
          <% end %>
        </div>
      </div>

      <!-- Infrastructure Tab -->
      <div id="infrastructure-tab" class="tab-content">
        <div class="infra-grid">
          <!-- Extensions -->
          <div class="panel extensions-panel">
            <div class="panel-header">
              <h3>🔧 Extensions</h3>
            </div>
            <div class="extension-changes">
              <% if (@metadata_comparison&.dig(:extensions_added) || []).any? %>
                <div class="change-section added">
                  <h4>➕ Added Extensions</h4>
                  <div class="extension-list">
                    <% (@metadata_comparison&.dig(:extensions_added) || []).each do |ext| %>
                      <span class="extension-tag added"><%= ext %></span>
                    <% end %>
                  </div>
                </div>
              <% end %>

              <% if (@metadata_comparison&.dig(:extensions_removed) || []).any? %>
                <div class="change-section removed">
                  <h4>➖ Removed Extensions</h4>
                  <div class="extension-list">
                    <% (@metadata_comparison&.dig(:extensions_removed) || []).each do |ext| %>
                      <span class="extension-tag removed"><%= ext %></span>
                    <% end %>
                  </div>
                </div>
              <% end %>

              <% if (@metadata_comparison&.dig(:extensions_added) || []).empty? && (@metadata_comparison&.dig(:extensions_removed) || []).empty? %>
                <div class="no-changes">
                  <p>No extension changes detected</p>
                </div>
              <% end %>
            </div>
          </div>

          <!-- Version Info -->
          <div class="panel version-panel">
            <div class="panel-header">
              <h3>🏷️ Version Info</h3>
            </div>
            <div class="version-info">
              <div class="version-item">
                <span class="version-label">PostgreSQL Version</span>
                <span class="version-value">
                  <%= @metadata_comparison&.dig(:postgresql_version, :before) || 'Unknown' %> → 
                  <%= @metadata_comparison&.dig(:postgresql_version, :after) || 'Unknown' %>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Action Bar -->
    <div class="action-bar">
      <div class="action-group">
        <a href="<%= timeline_path %>" class="btn-secondary">← Back to Timeline</a>
        <button onclick="window.print()" class="btn-ghost">🖨️ Print</button>
      </div>
      <div class="action-group">
        <button onclick="copyComparison()" class="btn-ghost">📋 Copy</button>
        <button onclick="exportComparison()" class="btn-primary">📥 Export</button>
      </div>
    </div>

  <% else %>
    <!-- Empty State -->
    <div class="empty-comparison">
      <div class="empty-icon">🔍</div>
      <h3>No Comparison Data</h3>
      <p>Unable to generate comparison between selected dates. This might be due to:</p>
      <ul class="empty-reasons">
        <li>No snapshots available for the selected date range</li>
        <li>Insufficient data for meaningful comparison</li>
        <li>Selected dates are too close together</li>
      </ul>
      <a href="<%= timeline_path %>" class="btn-primary">← Return to Timeline</a>
    </div>
  <% end %>
</div>

<!-- Compact Design System -->
<style>
:root {
  --space-xs: 4px;
  --space-sm: 8px;
  --space-md: 12px;
  --space-lg: 16px;
  --space-xl: 20px;
  
  --text-xs: 11px;
  --text-sm: 13px;
  --text-base: 14px;
  --text-lg: 16px;
  --text-xl: 18px;
  
  --success: #10b981;
  --warning: #f59e0b;
  --danger: #ef4444;
  --info: #3b82f6;
  --neutral: #6b7280;
  
  --border: #e5e7eb;
  --bg: #f9fafb;
  --card: #ffffff;
  --text: #111827;
  --text-muted: #6b7280;
}

.compare-compact {
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--space-lg);
  background: var(--bg);
  font-size: var(--text-base);
  line-height: 1.4;
}

/* Compact Header */
.compact-header {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: var(--space-lg);
  margin-bottom: var(--space-lg);
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.compact-header h1 {
  font-size: var(--text-xl);
  font-weight: 700;
  margin: 0 0 2px 0;
  color: var(--text);
}

.compact-header p {
  font-size: var(--text-sm);
  color: var(--text-muted);
  margin: 0;
}

.header-actions {
  display: flex;
  gap: var(--space-sm);
}

/* Overview Cards */
.overview-cards {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: var(--space-lg);
  margin-bottom: var(--space-lg);
}

.card {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: var(--space-lg);
  display: flex;
  align-items: center;
  gap: var(--space-md);
  position: relative;
}

.card.status::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 3px; background: var(--info); border-radius: 8px 8px 0 0; }
.card.config::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 3px; background: var(--warning); border-radius: 8px 8px 0 0; }
.card.metrics::before { content: ''; position: absolute; top: 0; left: 0; right: 0; height: 3px; background: var(--success); border-radius: 8px 8px 0 0; }

.card-icon {
  font-size: var(--text-lg);
}

.card-content {
  flex: 1;
}

.card-value {
  font-size: var(--text-lg);
  font-weight: 700;
  color: var(--text);
  line-height: 1;
  margin-bottom: 2px;
}

.card-label {
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-weight: 600;
  line-height: 1;
  margin-bottom: 2px;
}

.card-detail {
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.card-detail.positive { color: var(--success); }
.card-detail.negative { color: var(--danger); }

/* Compact Tabs */
.tab-container {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 8px;
  overflow: hidden;
  margin-bottom: var(--space-lg);
}

.tab-header {
  display: flex;
  border-bottom: 1px solid var(--border);
  background: var(--bg);
}

.tab-btn {
  flex: 1;
  padding: var(--space-md) var(--space-lg);
  border: none;
  background: transparent;
  color: var(--text-muted);
  font-size: var(--text-sm);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
  border-right: 1px solid var(--border);
}

.tab-btn:last-child {
  border-right: none;
}

.tab-btn:hover {
  background: var(--card);
  color: var(--text);
}

.tab-btn.active {
  background: var(--card);
  color: var(--info);
  border-bottom: 2px solid var(--info);
}

.tab-content {
  display: none;
  padding: var(--space-lg);
}

.tab-content.active {
  display: block;
}

/* Content Grid */
.content-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-lg);
}

/* Panels */
.panel {
  border: 1px solid var(--border);
  border-radius: 8px;
  overflow: hidden;
}

.panel-header {
  padding: var(--space-md) var(--space-lg);
  background: var(--bg);
  border-bottom: 1px solid var(--border);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.panel-header h3 {
  font-size: var(--text-base);
  font-weight: 600;
  margin: 0;
  color: var(--text);
}

.changes-count {
  font-size: var(--text-xs);
  color: var(--text-muted);
  background: var(--card);
  padding: 2px var(--space-xs);
  border-radius: 4px;
}

/* Metrics Table */
.metrics-table {
  padding: var(--space-md);
}

.metric-row {
  display: flex;
  align-items: center;
  gap: var(--space-md);
  padding: var(--space-sm) 0;
  border-bottom: 1px solid var(--border);
}

.metric-row:last-child {
  border-bottom: none;
}

.metric-name {
  flex: 1;
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text);
}

.metric-values {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  font-size: var(--text-sm);
  font-family: monospace;
}

.arrow {
  color: var(--text-muted);
}

.metric-change {
  font-size: var(--text-sm);
  font-weight: 600;
  padding: 2px var(--space-xs);
  border-radius: 4px;
  min-width: 60px;
  text-align: center;
}

.metric-change.positive {
  background: #ecfdf5;
  color: var(--success);
}

.metric-change.negative {
  background: #fef2f2;
  color: var(--danger);
}

/* Stats Grid */
.stats-grid {
  padding: var(--space-md);
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

.stat-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-xs) 0;
}

.stat-label {
  font-size: var(--text-sm);
  color: var(--text-muted);
  font-weight: 600;
}

.stat-value {
  font-size: var(--text-sm);
  color: var(--text);
  font-family: monospace;
}

/* Configuration Panel */
.config-panel {
  border: 1px solid var(--border);
  border-radius: 8px;
  overflow: hidden;
}

.config-table {
  padding: var(--space-md);
}

.config-row {
  display: grid;
  grid-template-columns: 1fr 2fr auto;
  gap: var(--space-md);
  padding: var(--space-md);
  border: 1px solid var(--border);
  border-radius: 6px;
  margin-bottom: var(--space-sm);
  align-items: center;
}

.config-row.changed {
  background: #fffbeb;
  border-color: var(--warning);
}

.config-row.unchanged {
  background: var(--bg);
}

.config-param {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
}

.config-param code {
  background: var(--bg);
  padding: 2px var(--space-xs);
  border-radius: 4px;
  font-size: var(--text-xs);
  color: var(--info);
}

.change-badge {
  background: var(--warning);
  color: white;
  padding: 2px var(--space-xs);
  border-radius: 4px;
  font-size: var(--text-xs);
  font-weight: 600;
}

.config-values {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.config-before, .config-after {
  display: flex;
  gap: var(--space-sm);
  align-items: center;
}

.config-before .label, .config-after .label {
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-weight: 600;
  min-width: 50px;
}

.config-before .value, .config-after .value {
  font-size: var(--text-sm);
  font-family: monospace;
  color: var(--text);
}

.impact-indicator {
  font-size: var(--text-xs);
  font-weight: 600;
  padding: 2px var(--space-xs);
  border-radius: 4px;
  text-align: center;
  min-width: 80px;
}

.impact-indicator {
  background: #fef2f2;
  color: var(--danger);
}

.impact-indicator.stable {
  background: #ecfdf5;
  color: var(--success);
}

/* Infrastructure Grid */
.infra-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-lg);
}

/* Extensions */
.extension-changes {
  padding: var(--space-md);
}

.change-section {
  margin-bottom: var(--space-lg);
}

.change-section h4 {
  font-size: var(--text-sm);
  font-weight: 600;
  margin: 0 0 var(--space-sm) 0;
  color: var(--text);
}

.extension-list {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-xs);
}

.extension-tag {
  background: var(--bg);
  border: 1px solid var(--border);
  padding: 2px var(--space-xs);
  border-radius: 4px;
  font-size: var(--text-xs);
  font-family: monospace;
}

.extension-tag.added {
  background: #ecfdf5;
  border-color: var(--success);
  color: var(--success);
}

.extension-tag.removed {
  background: #fef2f2;
  border-color: var(--danger);
  color: var(--danger);
}

/* Version Info */
.version-info {
  padding: var(--space-md);
}

.version-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-sm) 0;
}

.version-label {
  font-size: var(--text-sm);
  color: var(--text-muted);
  font-weight: 600;
}

.version-value {
  font-size: var(--text-sm);
  color: var(--text);
  font-family: monospace;
}

/* Action Bar */
.action-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: var(--space-lg);
}

.action-group {
  display: flex;
  gap: var(--space-sm);
}

/* Buttons */
.btn-primary, .btn-secondary, .btn-ghost {
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
  padding: var(--space-sm) var(--space-lg);
  font-size: var(--text-sm);
}

.btn-primary {
  background: var(--info);
  color: white;
}

.btn-primary:hover {
  background: #2563eb;
  transform: translateY(-1px);
}

.btn-secondary {
  background: var(--neutral);
  color: white;
}

.btn-secondary:hover {
  background: #4b5563;
  transform: translateY(-1px);
}

.btn-ghost {
  background: transparent;
  color: var(--text-muted);
  border: 1px solid var(--border);
}

.btn-ghost:hover {
  background: var(--bg);
  color: var(--text);
}

/* Empty States */
.empty-comparison, .empty-metrics, .empty-config, .no-changes {
  text-align: center;
  padding: var(--space-xl);
  color: var(--text-muted);
}

.empty-icon {
  font-size: 32px;
  margin-bottom: var(--space-sm);
}

.empty-comparison h3 {
  font-size: var(--text-lg);
  font-weight: 600;
  margin: 0 0 var(--space-sm) 0;
  color: var(--text);
}

.empty-comparison p {
  font-size: var(--text-sm);
  margin: 0 0 var(--space-md) 0;
}

.empty-reasons {
  text-align: left;
  margin: 0 0 var(--space-lg) 0;
  padding-left: var(--space-lg);
}

.empty-reasons li {
  font-size: var(--text-sm);
  margin-bottom: var(--space-xs);
}

/* Responsive */
@media (max-width: 1200px) {
  .overview-cards {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .content-grid, .infra-grid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .compare-compact {
    padding: var(--space-md);
  }
  
  .overview-cards {
    grid-template-columns: 1fr;
  }
  
  .tab-header {
    flex-direction: column;
  }
  
  .tab-btn {
    border-right: none;
    border-bottom: 1px solid var(--border);
  }
  
  .tab-btn:last-child {
    border-bottom: none;
  }
  
  .config-row {
    grid-template-columns: 1fr;
    gap: var(--space-sm);
  }
  
  .action-bar {
    flex-direction: column;
    gap: var(--space-md);
  }
  
  .action-group {
    justify-content: center;
  }
}
</style>

<script>
function showTab(tabName) {
  // Hide all tabs
  document.querySelectorAll('.tab-content').forEach(tab => {
    tab.classList.remove('active');
  });
  
  // Hide all tab buttons
  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Show selected tab
  document.getElementById(tabName + '-tab').classList.add('active');
  
  // Activate button
  event.target.classList.add('active');
}

function exportComparison() {
  const button = event.target;
  const originalText = button.innerHTML;
  button.innerHTML = '⏳ Exporting...';
  button.disabled = true;

  // Simulate export process
  setTimeout(() => {
    button.innerHTML = originalText;
    button.disabled = false;
    showToast('✅ Comparison exported successfully', 'success');
  }, 1500);
}

function copyComparison() {
  const comparisonData = document.querySelector('.compare-compact').innerText;
  navigator.clipboard.writeText(comparisonData).then(() => {
    showToast('📋 Comparison copied to clipboard', 'success');
  }).catch(() => {
    showToast('❌ Failed to copy to clipboard', 'error');
  });
}

function showToast(message, type) {
  const toast = document.createElement('div');
  toast.innerHTML = message;
  toast.style.cssText = `
    position: fixed; top: 20px; right: 20px; padding: 8px 12px; border-radius: 6px;
    font-size: 13px; font-weight: 600; z-index: 1000; max-width: 300px;
    background: ${type === 'success' ? '#10b981' : '#ef4444'}; color: white;
    animation: slideIn 0.3s ease; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  `;
  
  document.body.appendChild(toast);
  setTimeout(() => toast.remove(), 4000);
}

// CSS animation
const style = document.createElement('style');
style.textContent = `
  @keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
`;
document.head.appendChild(style);
</script>
